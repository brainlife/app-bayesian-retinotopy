#!/bin/bash
#PBS -l nodes=1:ppn=4,vmem=50gb,walltime=2:00:00
#PBS -N pRF
#PBS -V

fsdir=$(jq -r .output config.json)
prf_surfs=$(jq -r .prf_surfs config.json)

export SUBJECTS_DIR=`pwd`
cp -R $fsdir $SUBJECTS_DIR && cp -R $fsdir $SUBJECTS_DIR/$(basename $fsdir)_MNI

rm -R $SUBJECTS_DIR/$(basename $fsdir)_MNI/surf && mkdir $SUBJECTS_DIR/$(basename $fsdir)_MNI/surf



mkdir interpolated_prf_surfs
mkdir ret_output
mkdir -p prf/benson14_surfaces varea

time singularity exec -e docker://brainlife/mcr:r2019a ./compiled/main

time singularity exec -e docker://davhunt/neuropythy:1.5.1 python ./interpolate.py

time singularity exec -e docker://davhunt/neuropythy:1.5.1 bash -c "python -m neuropythy register_retinotopy output \
  --verbose \
  --lh-eccen=interpolated_prf_surfs/lh.benson14_eccentricity \
  --lh-angle=interpolated_prf_surfs/lh.benson14_polarAngle \
  --lh-weight=interpolated_prf_surfs/lh.benson14_r2 \
  --lh-radius=interpolated_prf_surfs/lh.benson14_rfWidth \
  --rh-eccen=interpolated_prf_surfs/rh.benson14_eccentricity \
  --rh-angle=interpolated_prf_surfs/rh.benson14_polarAngle \
  --rh-weight=interpolated_prf_surfs/rh.benson14_r2 \
  --rh-radius=interpolated_prf_surfs/rh.benson14_rfWidth \
  --subjects-dir=$(dirname $fsdir) \
  && cp -R ./$(basename $fsdir) ./ret_output" # in ./output/mri/inferred* and ./output/surf/inferred*

time singularity exec -e -B `pwd`/license.txt:/usr/local/freesurfer/license.txt docker://brainlife/freesurfer:6.0.1 ./create_vtks.sh ./ret_output/$(basename $fsdir)


echo "running create_R2"
# this will create a binary mask R2 of 1's and 0's
# based on whether a voxel is assigned a visual area or not
./create_R2.py ./varea/parc.nii.gz

rm -rf ./ret_output
